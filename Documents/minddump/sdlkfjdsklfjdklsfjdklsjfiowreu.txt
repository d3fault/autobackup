As ever, I thought I was a good coder a little bit ago... then I watched the soup's "Writing good C++14" talk. Since I actually understood it, I instantly became a much better coder than I was before having watched it. owner<> is amazing, but I'll keep using the less efficient shared pointer method of doing it until there's a CppCoreGuidelines checker available for my particular OS. The title of the talk was misleading as fuck. I went into it thinking: "ok let's see what C++14 has to offer and maybe I'll ditch 98/03... but CppCoreGuidelines has nothing to do with 14!!! The techniques are perfectly applicable to 98/03, lol. But honestly really I've come to realize recently that it doesn't fucking matter anymore now that LLVM IR exists. LLVM IR can spit out C... or obviously assembly... so it doesn't matter really what language you code in, so long as there's an LLVM frontend available. PHP/Perl/Java/etc could all become native.... but hahahahaha fucking rekt those devs did it wrong and it would be a huge amount of work for them to implement that (a rewrite). The only reason I have now to stick to 98/03 is being a grumpy old "gett of my lawn" type man.... which admittedly is fun. Also I'm just being a cunt by pointing this out, but it's funny that soup' says he hates camel case but then it's called CppCoreGuidelines and not Cpp-Core-Guidelines or cpp_core_guidelines xoP. CppCoreGuidelines is the best thing that happened to C++ since C++. It's like another increment of itself!