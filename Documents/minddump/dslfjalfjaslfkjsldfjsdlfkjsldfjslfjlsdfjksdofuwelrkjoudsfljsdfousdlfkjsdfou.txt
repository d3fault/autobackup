Ultra-MEGA-Paranoia
AGPL+andthensome fits "perfect" bettererer?
My linux box with binary blob vs. OlixinoMICRO (or whatever)


Forget internal keyboard wiring, usb cables, bus logging usb hubs, usb "broadcasting", veigns, tendons, central nervous systems (direct route), CNS (spine), and CNS (full body "broadcast"). Let's go straight to the source(s): A fucking infrared video camera with enough precision could stare directly into the brains! Both the CPU on the computer and yours truly! The "master key" would be "in memory" during the entire time the keepass/truecrypt file is open (only "in memory" in brain when entering (or also when "recite-correctecly"-ing)), so you'd need to wrap it in foil for that period and either scramble the memory before powering off or waiting for the memory to cool down (similar to cold boot attacks of today). Or I mean leave the brains wrapped in foil 24/7/365/death. OSHIT NIGGA DID I JUST JOIN THE TIN FOIL HAT CLUB!?!?!? The sliding window of security applies: do I think such high precision infrared cameras are capable of existing (aleeenz could be watchin mah brain rite nao!)? Absofuckinglutely. Do I think they'll be invented in my lifetime? Almost Certainly. Do I think they exist now? Less Almost Certainly Not... but they might/could. It is again a matter of TRYING to predict when... and if you aren't "too soon" then you are ALMOST CERTAINLY too late (because perfect exact fucking timing is near impossible). So my only/best option is to join it now, way ahead of schedule, so I can stop worrying about it. Guh my "launch" looks hilarious now (but ultimately doesn't affect a single thing). Also, re:aliens. If they exist and are watching us, they can crack our encryption/bitcoin by barely trying. The main enemies are our peers (and especially our governments (greedy corrupt bastards with access to state of the art technology)).


"In a perfect world, everything would be in the public domain" may have gotten me to switch to GPL (not 100% on that anyways), but really AGPL fits it better/too! If you interact with a system/network in the perfect world, surely you should get the source code to said system/network! WE COULD TAKE IT EVEN FURTHER AND MAKE OUR OWN ABOMINATION OF AGPL: if your work communicates over the network with this work, it must be licensed under this license. Although I'm not sure that would hold up in court, you can pretty much get away with anything (including the removal of others' free will) in good ole US&A... so I wouldn't be surprised. Throw on virally spreading "no patent"/dmca-protected-anti-circumvention clauses that travel through anything that communicates with it via network (again, if possible), and what you have is a license that nobody would touch with a penis. All this is so fucking arbitrary and ridiculously hard to decide on. I like how I can take months/years(?) worth of ideology ("DPL FTW") and shit all over it in a couple of minutes and change my mind.

Actually come to think of it I doubt you could make network communicating softwares be licensed under your terms, seeing as API cannot be copyrighted... and network is an even further abstraction than that. I don't think protocols can be copyright either, is my point. But shit maybe they can what the fuck do I know. *searches interbutts*. Hmm looks like noobs try to patent and keep secret protocols... but reverse engineering prevails :-P. So that's basically the same thing. Protocols/APIs can't be copyrighted, therefore HOLY SHIT WHAT THE FUCK WAIT HOW DOES GPL CONSIDER "LINK-TO", A SIMPLE USAGE OF AN API, TO BE A DERIVATIVE WORK? I think I might be confusing issues here. The Google v. Sun/Oracle thing was that Google re-implemented an API "thought" (wrongly) to be copyrighted... whereas GPL is enforced when "utilizing the API of" a GPL'd work. So where do protocols fit in by comparison? It's a stretch but I am capable of saying that a different piece of software communicating with the AGPL++Hyptothetical licensed work would be "utilizing the protocol of" that work.... and I could sort of (it's a stretch) draw the conclusion that protocol is essentially API (especially when RPC is involved :-P)........ BUT at the end of the day I just read on the "Proprietary_protocol" wikipedia that DMCA grants safe harbor to reverse engineer software for the purpose of interoperability with other software... so it probably would not hold up in court.

Oh cool another GPL circumvention technique (as if calling across a process wasn't hard enough (ignoring the wrapper gen technique)): QLocalSocket RPC call to GPL'd software = SAFE FUCKING HARBOR. There is some legal gray areas that say that even cross process calls MIGHT create a derivative work, true. But usually DMCA stuff trumps all other copyright law... so saying that there's safe harbor for reverse engineering a protocol means that using RPC to access GPL'd works is a pretty solid GPL circumvention if you ask me. But what do I know, IANAL.


I highly dislike that there's a binary blob for the video driver on my "ultra secure machine" (which I still have not typed the password into for the first time yet). I was considering getting some OLuxinO-Micro or some shit that was touted as "open hardware". Looking into it further though, it is based on ARM as well so no matter if I stay with my current one or go with that one, I ultimately have to trust ARM that their CPU itself is not "rigged for key stealing". It sucks that CPUs are either too complex or too slow for the average person (or even programmer) to make and use for cryptography purposes. There will almost always be a tiny bit of trust necessary.... which fucking sucks if you ask me.