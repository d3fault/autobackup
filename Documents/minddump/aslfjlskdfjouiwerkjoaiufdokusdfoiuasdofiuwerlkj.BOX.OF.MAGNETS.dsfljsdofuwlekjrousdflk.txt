I understand why I'm so.... shitty feeling. A man shouldn't carry this many secrets. My entire life is a secret just waiting to be corrupt, data rotten, deleted (accidentally-via-scripts-etc/intentionally), stolen, forgotten, lost. It is understandable that I have nightmares about data corruption. It is reasonable that I turn in my bed when the loud as fuck garbage truck (lol rhymes) drives by my week once a week (and I tend to make sure my platters aren't spinning when he does). I think I'm getting to know my brain better recently. I'm soothing it but at the same time criticizing it. I am slow and procrastinate like fuck. There's also no "punishment" I can use to condition myself. I want to buy some button batteries so I can use my electric shocking cell phone to condition myself. Not sure how good it will work but I think a zap in the neck after I do something I don't approve of (procrastination included) might help me passively condition myself. Ideally I'd have lots of reinforcers (both positive and negative), but atm I don't have any (formally/additionally. Of course the rewards of coding are there etc). I think even having 5 full copies of all my work spread around this earth would make me immensely more comfortable. After I finish + test Rpc Generator (incl. client (incl. the generator itself)) I'm going to completely reorganize my Archive folder using git submodules and Qt automation (similar to, but superseding [slightly, this is still just a short term solution], QuickDirtyAutoBackupHalper). I'm a bit afraid that I'll lose some data but I'm going to go at it quite scientifically and maybe I'll even keep around copies of the old format just in case I later determine I forgot to copy something or copied it incorrectly etc. I'm afraid of the "import" itself, but once it's done I will be much more confident in my redundancy and will keep all versions closer to being upToDate because synchronizing (git push) will be a fuck ton easier (and even more efficient) than my current hacky/shitty "staticBackup" approach. Shit makes me puke... overwriting a 10gb file (growing when necessary) every time I want to sync. Aaaaaaaaaaaahhhhhhhhhhhh. It is understandable and I have a plan to get out of it. Step 0 is finishing my current chunk of code, Step 1 is redoing the short term backup solution, Step 2 is proceed with launch/regular-coding-etc, Step 3 is design/document/film/etc the long term backup solution itself (supposedly a dht (non-centralized/non-"business", though i may use a business dht IN ADDITION TO (since I will "publish" via the business dht in the short term in order to get ad revenue) the most ideal solution: no points of failure), but will possibly be a hybrid of lots of different custom solutions (input-only/output-only, etc -- which requires more research/design in the first place)).

[in no particular order (relating to when they are created)]
0) Git Submodules offline copies
1) Input-only/Output-only custom copies (perhaps the "live data" has to be in this format since input-only/output-only design requires smart and new/custom software to properly utilize it (especially in a realtime/broadcasting manner))
2) Freenet pusher -- because Freenet has a lot of the properties I want in my eventual DHT (except long term storage) and it works NOW. Installing Java is worth that stability/censorship-resistance <3 <3 <3 <3
3) Business DHT (whether custom or couchbase), basically http access early on that is ad supported
4) Ultimate DHT: d3fault -- everything integrated -- possibly even 0-3 above integrated and done "in addition to" the main dht storage (which is like Freenet except ForeverFileSystem'ish)
5) Book, periodically released (yearly? every 3 years? idfk). Paper copies are so fucking awesome and I love the fact that people will pay me in order to make a backup for me..... hahahahahahahahahahahahahahahahahaha "life". d3fault could easily integrate this functionality as well "export all to book" or something. Idk if each release will include all shit already released (and therefore re-released), or just a diff with the new content since the last book (TODOreq: do both... kinda like "os upgrade" vs. "full" -- give the user choice).