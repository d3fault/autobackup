in the appdb, when requesting a slot purchase, for example...
...if race condition 2 is detected (the request is being verified by the bank server.. to see if they have the proper funding (which is really a double check, since appdb does this too [but is not trusted ofc]))...
... we want to save the request in a queue in case the bitcoin server says "insufcicient funds" (which is a race condition in itself or a hack attempt)

still, the proper thing to do is queue the requests for the same request (buy @ <current> (current is constantly increasing as seconds elapse... or is it decreasing, besides the point)) and process them 1 by one (as they were received) as each one fails (which should rarely happen). they also don't get a response "slot request processing..." until any of the queue members before them pass the server check stage. we just hold onto the requests... then flush em (with a 'sorry, too late' message) after the bank server replies sufficient funding (and then the app logic is updated accordingly)