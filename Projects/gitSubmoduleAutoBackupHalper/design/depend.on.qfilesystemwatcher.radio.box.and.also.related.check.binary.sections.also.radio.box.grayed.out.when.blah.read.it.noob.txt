Yes/No radio box: "Depend on QFilesystemWatcher?". Over to the right we could have a (duplicate-filtering) list of confirmed detected changes. So when you unminimize the app (it is intended to be open when you are doing development, but this is not a requirement (SELECT "No" in the radio box just described!)) you can see the folders (optimization and what git works with anyways (but i still need to check for new folders based on the fact that that folder merely 'changed', etc)) that you have worked in. NVM: [[[I suppose each time a change to a dir happens we could re-scan for new folders, though that might be inefficient. The reasoning was so that we could then monitor the new folder... but that's not needed since we will scan all children of the detected changed folder before committing (and do 'new submodule/folder so setup git shit' functionality THEN)]]]



Grayed out if the above radio is yes: "Check Binary Section Also" yes/no radio box. Also indented to show relationship. We should opt-in to the binary checks (expensive), but the most efficient way to do them is to let QFilesystemWatcher do them! However sometimes you just have to do them because for example you didn't have the app running when you added the binary etc). This implementation might actually be somewhat efficient :-D! And for the amount of code it requires, wow I am excited for what it will give me. ESSENTIALLY per-folder "revision history" (incl. TODOreq cheap/'free'(in long term storage but obviously not live shit) 'symlinks' to folders/perhaps-files-to of a specific revision! useful as fuck for projects etc, and really the main point of submodules lol). the only exception to that is of course folders in stuff like my "Projects" folder where each subfolder is a full submodule (it's subfolders should not be 'new submodule/folder'-ized).