I would like to integrate the dynamic runtime calculated number of arbitrary events to process before processing gui thread (or any thread, for example) into designEquals or somewhere at least.

I came up with this: Say we're doing dynamic number of video frames decoded before checking a thread: At time of develop, developer of video decoder runs script that tests his system. He obviously runs the test implicitly because he is the developer of the code-that-implements-dynamic-number-of-thing, so he must test it at some point and this is where the code could be run for him (perhaps forcing him to select "accept test results" (meaning the main functionality, but implicitly the benchmark test results too). As a hardcoded (#define) variable, the application uses that hardcoded number for it's own initial probing. The developer sets (one time per IDE (but it (the IDE) probably has it's own default in that case xD)) an arbitrary target speed: "What would take a 200mhz 1 second to complete", which is deduced from "What my machine does in 1 second" (we know our ghz). Honestly even as low as "How many video frame decodes a 1mhz could do in 1 second" would probably provide enough accuracy. Remember that it's just the starting point for the app on first launch when first probing the hardware. Ideally the OS would provide you a number to rely on (because it does seem pointless to keep recalculating it for every application. there just needs to be a good metric (and hell, there probably already is)), but as of writing I don't know of any.