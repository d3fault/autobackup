I spent a decent amount of time looking at implicit sharing / pimpl the other day, and was about to implement it for all my designed classes... until I realized you can't have an implicitly shared object inherit from QObject. I am now considering having two modes for a class/object: action class (QObject) and POD class (implicitly shared). The POD class would be always serializeable, and the action class would just have signals/slots and probably use said POD classes for the arguments of the signals/slots. However I'm not too sure I want to go this route.

It's weird that this very app has a ton of SERIALIZEABLE ACTION CLASSES, so I'm leik "wtf?". Copy on write does make sense for "DesignEqualsImplementationProject" (or class), as does signals/slots, and of course serialization (and hell, a special mode of serialization called "source code generation" ;-P). So uhh for now I'm just going to not implement COW even though I really think it'd be schmexy to use COW with ease like that.