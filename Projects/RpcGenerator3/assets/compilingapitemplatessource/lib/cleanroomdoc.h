//THIS FILE IS NOT GENERATED BY RPC GENERATOR. IT IS ONLY TO GET MY AUTO-DRILLDOWN STUFF WORKING ASAP IN THE COMPILING TEMPLATE SOURCE
#ifndef CLEANROOMDOC
#define CLEANROOMDOC

#include <QVariant>
#include <QDateTime>
#include <QJsonDocument>
#include <QJsonObject>

#include <QCryptographicHash>

struct CleanRoomDoc
{
    CleanRoomDoc()
    { }
    CleanRoomDoc(QDateTime timestamp, QString username, QByteArray data, QString licenseIdentifier)
        : Timestamp(timestamp)
        , Username(username)
        , Data(data)
        , LicenseIdentifier(licenseIdentifier)
    { }

    QDateTime Timestamp;
    QString Username;
    QByteArray Data;
    QString LicenseIdentifier;

    static QByteArray cleanRoomDocHash(QByteArray cleanRoomDocJson)
    {
        CleanRoomDoc *cleanRoomDoc = CleanRoomDoc::fromJson(cleanRoomDocJson);
        return cleanRoomDoc->cleanRoomDocHash();
        delete cleanRoomDoc;
    }
    QByteArray cleanRoomDocHash() const
    {
        QByteArray docJson = toJson(QJsonDocument::Compact);
        return QCryptographicHash::hash(docJson, QCryptographicHash::Sha1).toHex(); //TODOoptimization: buffer
    }
    static CleanRoomDoc *fromJson(QByteArray cleanRoomDocJson)
    {
        QJsonDocument cleanRoomDocJsonDoc = QJsonDocument::fromJson(cleanRoomDocJson);
        QJsonObject rootJsonObject = cleanRoomDocJsonDoc.object();
        CleanRoomDoc *cleanRoomDoc = new CleanRoomDoc(
                      QDateTime::fromMSecsSinceEpoch(rootJsonObject.value("t").toString().toLongLong())
                    , rootJsonObject.value("u").toString()
                    , QByteArray::fromBase64(rootJsonObject.value("d").toString().toUtf8())
                    , rootJsonObject.value("l").toString()
                    );
        return cleanRoomDoc;
    }
    QByteArray toJson(QJsonDocument::JsonFormat jsonFormat = QJsonDocument::Compact) const
    {
        QJsonObject cleanRoomDocJsonObject;
        cleanRoomDocJsonObject.insert("t", QJsonValue(QString::number(Timestamp.toMSecsSinceEpoch())));
        cleanRoomDocJsonObject.insert("u", QJsonValue(Username));
        cleanRoomDocJsonObject.insert("d", QJsonValue(QString(Data.toBase64())));
        cleanRoomDocJsonObject.insert("l", QJsonValue(LicenseIdentifier));

        QJsonDocument cleanRoomDocJsonDoc(cleanRoomDocJsonObject);
        return cleanRoomDocJsonDoc.toJson(jsonFormat);
    }
};
bool operator==(const CleanRoomDoc &e1, const CleanRoomDoc &e2);
uint qHash(const CleanRoomDoc &key, uint seed);

#endif // CLEANROOMDOC
