This analogy doesn't translate 1:1, but I'm gonna roll with it just because it makes it easier to explain.
My idea of root vs. user -land is that userland is delete/drunk proof, and root isn't. These days (modern OS's) both root and user lands allow the deletion of data, it's only installing vs. uninstalling apps that's disallowed/permitted. Like I said, the analogy doesn't translate 1:1 (so perhaps such priveledge separation should still be utilized (Problably this new "delete proof" vs. "not delete proof" 'lands' just need their own symoblic naming scheme (because borrowing the names like I did in this analogy would just lead to confusion))).

I want to always be in that delete proof "userland". The code just doesn't exist [yet]. Btw kinda OT but not: such a "delete proof" 'land' _REQUIRES_ a fucking DHT. It's absolutely impossible on a single system (perhaps the more appropriate term is node? because arguably an entire dht is a 'system'). Still though hell yea a single node should still TRY to be as delete proof as possible when it's not connected to a/the DHT.